== render :slim, :'_header'
div class="main"
  h2 Brukere
  p Her vises alle brukerne som er pålogget, og de inaktive, det vil si de som har logget seg på tidligere i dag. Listen nullstilles hver natt, slik at ingen personopplysninger lagres mer enn ett døgn.
  p Det skilles mellom tre brukertyper:
  |<p><span class="bold">[B] biblioteksbrukere</span> - logger seg på med lånekortnummer og PIN-kode.</p>
  |<p><span class="bold">[G] gjestebrukere</span> - personalet kan opprette gjestebrukere ved behov.</p>
  |<p><span class="bold">[A] anonyme brukere</span> - brukere av korttidsmaskiner uten krav til pålogging er naturlig nok anynoyme.</p>

  h3 Om tidsstyring
  p blah blah
  h2 Påloggede brukere

  table class="users"
    thead
      tr
        th type
        th bruker
        th[colspan="2"] minutter igjen
        th filial / avdeling
        th klient
        th
    tbody
      - for user in User.logged_on
        - client = Client.find(user.client_id)
        tr id="#{user.id}"
          td #{user.type_short}
          td #{user.username}
          td[class="td-minutes"] #{user.minutes}
          td
            input[type="hidden" class="users minutes" value="#{user.minutes}"]
            input[type="text" class="nr required"]
            button[type='button' class="users add_time"] = "+"
          td
            a href="/#{client.branch.name}" #{client.branch.name}
            '&nbsp;/
            a href="/#{client.branch.name}/#{client.department.name}" #{client.department.name}
          td #{client.name}
          td: button[type='button' class="users"]  = "Kast ut!"

  h2 Inaktive brukere

  table class="users"
    thead
      tr
        th type
        th bruker
        th[colspan="2"] minutter igjen
        th

    tbody
      - for user in User.inactive
        tr id="#{user.id}"
          td #{user.type_short}
          td #{user.username}
          td[class="td-minutes" style="width:40px"] #{user.minutes}
          td
            input[type="hidden" class="users minutes" value="#{user.minutes}"]
            input[type="text" class="nr required"]
            button[type='button' class="users add_time"] = "+"
          td: button[type='button' class="users delete"]  = "Slett"

  == render :slim, :'_footer'

  script src="/js/jquery.meio.mask.min.js"
  javascript:
    $(document).ready(function () {

      // ** global functions and handles **

      $(':input').focus(function () {
        if ($(this).hasClass('inputmissing')) {
          $(this).removeClass('inputmissing');
        }
      });


      // ** set input masks **

      $('input.nr').setMask('999');


      // ** Handle delete user

      $('button.users.delete').on('click', function () {
        var user_id = $(this).parents('tr').attr('id');

        var request = $.ajax({
          url: "/api/users/"+user_id,
          type: "DELETE"
        });

        request.done(function(msg) {
          $('tr#'+user_id).remove();
        });

        request.fail(function(jqXHR, textStatus, errorThrown) {
            // TODO where to display error message?
            //alert(jqXHR.responseText);
        });
      });

      // ** Handle adjust user minutes
      $('button.users.add_time').on('click', function () {

        var $i = $(this).siblings('input.nr.required')
        if (parseInt($i.val()) == 0) {
          $i.val('');
          return;
        }
        if ($i.val() =='' ) {
          $i.addClass('inputmissing');
          return;
        }

        var user_id = $(this).parents('tr').attr('id');
        var $min = $('tr#'+user_id).find('input.users.minutes');
        var user_minutes = $min.val();

        var request = $.ajax({
          url: '/api/users/'+user_id,
          type: "PUT",
          data: {
                minutes: parseInt(user_minutes)+parseInt($i.val())
                },
          dataType: "json"
        });

        request.done(function(data) {
          $min.val(data.user.minutes); // update hidden input
          $('tr#'+user_id).find('td.td-minutes').html(data.user.minutes);
          $i.val('');
        });

        request.fail(function(jqXHR, textStatus, errorThrown) {
             // TODO where to display error message?
             //alert(jqXHR.responseText);
         });

      });

    });