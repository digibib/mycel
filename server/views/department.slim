== render :slim, :'_header'
div class="main"
  - if department.name == department.branch.name
    h2 #{department.branch.name}
  - else
    h2 #{department.branch.name}: #{department.name}

  h3 Gjestebrukere
  p Gjestebrukere vil være kun være gyldige for den dagen de lages. Brukerene er gyldig på alle avdelinger med mindre det er aldersbegrensninger som skulle tilsi noe annet.
  div class="divdot inputf"
    button[type='button' class='guest' id="adduser"]  = "Lag gjestebruker"
    form id="add_user_form"
      table class="userform"
        tr
          td brukernavn
          td: input[type="text" id="username" class="required"]
          td passord
          td: input[type="text" id="user_password" class="required"]
        tr
          td alder
          td: select[name="age" id="user_age"]
            |<option value="adult">voksen</option>
            |<option value="child">barn</option>
          td minutter
          td: input[type="text" class="nr required" id="user_minutes"]
        tr
          td: button[type='button' id="usersave"]  = "Lagre bruker"
          td: button[type='button' id="usercancel"]  = "Avbryt"
          td
          td[id="user_form_response"]
            span[class='info']
            span[class='error']


  h2 Klienter
  p Du vil bare kunne endre innstillinger på de klientene som ikke er i bruk.
  p Noen endringer vil først tre i kraft etter omstart.
  table class="clients occupied" id="dummyclient"
    tr
      td style="width:40px": img src="/img/pc_green.png" class="pc"
      td dummyklient
      td[colspan='2']Petter Goksøyr Åsen
      td: button[type='button' id="user_throw_out" class="occupied_options"]  = "Kast ut!"
    tr
      td style="width:40px"
      td
      td[id="petter_minutes_left"] 32 min igjen
      td[style="text-align:right"]
        input[type="text" name="add_time" id="add_time" class="nr occupied_options"]
      td: button[type='button' id="useraddtime" class="occupied_options"]  = "Gi mer tid"

  - for client in department.clients
    table class="clients available" id='client_id_#{client.id}'
      tr
        td style="width:40px": img src="/img/pc_black.png" class="pc"
        td: #{client.name}
        td Ikke i bruk
        td
        td: button[type='button' class="innstillinger" id="optionsbutton"] = "innstillinger"
      tr class="clientoptions"
        td style="width:40px"
        td MAC-addresse
        td: input[type="text" value="#{client.hwaddr}" disabled="disabled"]
        td IP-addresse
        td: input[type="text" value="#{client.ipaddr}" disabled="disabled"]
      tr class="clientoptions"
        td style="width:40px"
        td navn
        td: input[type="text" value="#{client.name}" disabled="disabled"]
        td korttidsmaskin (ingen pålogging)
        td[style="text-align:center"]
          - if client.shorttime
            input[type="checkbox" class="shorttimemachine" checked=true]
          - else
            input[type="checkbox" class="shorttimemachine"]
      tr class="clientoptions"
        td style="width:40px"
        td skjermoppløsing
        td: select[id="client_screen_res"]
            - for res in screen_res do
              |<option #{'selected' if res.id == client.screen_resolution_id} value="#{res.id}">#{res.resolution}</option>
        td
        td
      tr class="clientoptions"
        td style="width:40px"
        td[colspan="2"]
          span[class='info']
          span[class='error']
        td: button[type='button' id="clientsave"]  = "Lagre"
        td[style="text-align:center"]: button[type='button' id="clientcancel"]  = "Avbryt"

  h2 Lokale innstillinger
  p Følgende innstillinger vil gjelde for alle klientene i denne avdelingen.
  h3 Åpningstider
  p Brukerne vil bli logget av X minutter før stengetid.
  div class="divdot inputf"
    form id="add_hours_form"
      table class="genform"
        tr
          td
          td fra
          td til
          td stengt?
          td
          td fra
          td til
          td stengt?
        tr
          td mandag
          td: input[type="text" name="monday_opens" id="monday_opens" class="hour"] -
          td: input[type="text" name="monday_closes" id="monday_closes" class="hour"]
          td: input[type="checkbox" class="chk" name="monday_closed"]
          td fredag
          td: input[type="text" name="friday_opens" id="friday_opens" class="hour"] -
          td: input[type="text" name="friday_closes" id="friday_closes" class="hour"]
          td: input[type="checkbox" class="chk" name="friday_closed"]
        tr
          td tirsdag
          td: input[type="text" name="tuesday_opens" id="tuesday_opens" class="hour"] -
          td: input[type="text" name="tuesday_closes" id="tuesday_closes" class="hour"]
          td: input[type="checkbox" class="chk" name="tuesday_closed"]
          td lørdag
          td: input[type="text" name="saturday_opens" id="saturday_opens"  class="hour"] -
          td: input[type="text" name="saturday_closes" id="saturday_closes" class="hour"]
          td: input[type="checkbox" class="chk" name="saturday_closed"]
        tr
          td onsdag
          td: input[type="text" name="wednsday_opens" id="wednsday_opens" class="hour"] -
          td: input[type="text" name="wednsday_closes" id="wednsday_closes" class="hour"]
          td: input[type="checkbox" class="chk" name="wednsday_closed"]
          td søndag
          td: input[type="text" name="sunday_opens" id="sunday_opens" class="hour"] -
          td: input[type="text" name="sunday_closes" id="sunday_closes" class="hour"]
          td: input[type="checkbox" class="chk" name="sunday_closed"]
        tr
          td torsdag
          td: input[type="text" name="thursday_opens" id="thursday_opens" class="hour"] -
          td: input[type="text" name="thursday_closes" id="thursday_closes" class="hour"]
          td: input[type="checkbox" class="chk" name="thursday_closed"]
          td
          td
      div[class="hoursbuttons"]=
    button[type='button' id="hoursrsave" class="gen"]  = "Lagre"
    button[type='button' id="hoursclear" class="gen"]  = "Blank ut skjema"

  h3 Aldersbegrensninger
  p Hvis det er ønskelig, kan klientene være forbeholdt brukere innenfor en gitt aldersgruppe. Angi nedre og øvre aldersgrense i år:
  div class="divdot inputf"
    table class="genform"
      tr
        td nedre aldergrense
        td: input[type="text" name="age_lower" id="age_lower" class="nr"]
        td øvre aldergrense
        td: input[type="text" name="age_higher" id="age_higher" class="nr"]
        td: button[type='button' id="agesave" ]  = "Lagre"


  h3 Tidsbegrensninger
  p Angi tidsbegrensinger per bruker per dag, eller tillat fri bruk:
  div class="divdot inputf"
    table class="genform"
      tr
        td minutter per dag
        td: input[type="text" name="minutes_limit" id="minutes_limit" class="nr"]
        td fri bruk?
        td: input[type="checkbox" name="minutes_unlimited" id="minutes_unlimited"]
        td: button[type='button' id="use_save"]  = "Lagre"

  h3 Printer
  div class="divdot inputf"
    table class="genform"
      tr
        td  printeradresse
        td: input[type="text" name="printer" class="printer"]
        td: button[type='button' id="printersave"]  = "Lagre"

  script src="/js/jquery.meio.mask.min.js"
  javascript:
    // TODO change all # dublicates to .class

    // ** conveniece functions **

    $.fn.exists = function () {
      return this.length != 0;
    }

    $(document).ready(function () {

      // ** set input masks **

      $('input#user_minutes').setMask('999');
      $('input#age_lower').setMask('99');
      $('input#age_higher').setMask('99');
      $('input#minutes_limit').setMask('999');
      $('input#add_time').setMask('999');

      // ** global functions and handles **

      $(':input').focus(function () {
        if ($(this).hasClass('inputmissing')) {
          $(this).removeClass('inputmissing');
        }
      });

      // ** handle add-guest-user events **

      $("button#adduser").on("click", function() {
        $('table.userform').toggle();
      });
      $("button#usercancel").on("click", function() {
        $('table.userform').hide();
      });

      $('button#usersave').on('click', function () {
        var missing = 0;
        $('#add_user_form').find('input.required').each(function() {
          if ($(this).val() == '' ) {
            $(this).addClass('inputmissing');
            missing = 1;
          }
        });

        if (missing) { return; }

        var request = $.ajax({
          url: '/saveuser',
          type: 'POST',
          data: {
                 username: $('input#username').val(),
                 password: $('input#user_password').val(),
                 age: $('select#user_age').val(),
                 minutes: $('input#user_minutes').val(),
                 },
          dataType: "html"
          });

        request.done(function(msg) {
          $('td#user_form_response').find('span.error').html(''); // clear error message if any
          $('td#user_form_response').find('span.info').html(msg)
            .show().fadeOut(10000);
          $('#add_user_form')[0].reset();
        });

        request.fail(function(jqXHR, textStatus, errorThrown) {
          $('td#user_form_response').find('span.info').html(''); // clear info message if any
          $('td#user_form_response').find('span.error')
            .html(jqXHR.responseText).show().fadeOut(10000);
        })
      });

      // ** handle client-options events **

     $("button#optionsbutton").on("click", function() {
        $s = $(this).parents("tr").siblings("tr.clientoptions")
        $s.toggle();
        if (($s).is(':visible')) {
          $s.parents('table').addClass("options_open");
        } else {
          $s.parents('table').removeClass("options_open");
        }
      });

      $("table.clients.available").hover(
        function() {
          if (!$("table.clients.options_open").exists()) {
            $(this).find(":button").show()
          }
        },
        function() {
          if (!$("table.clients.options_open").exists()) {
            $(this).find(":button").hide()
            $('tr.clientoptions').hide();
            $('table.options_open').removeClass('options_open');
          }
        });

      $("table.clients.occupied").hover(
        function() {
          $(this).find(":button").show();
          $(this).find(":input").show();
        },
        function() {
          $(this).find(":button").hide();
          $(this).find(":input").removeClass('inputmissing').hide();
        });

      $('button#clientsave').on('click', function () {
        var $s = $(this).parents('table');
        var shortbool = 0;
        if ($s.find('input.shorttimemachine').is(':checked')) {
          shortbool = 1;
        }

        var request = $.ajax({
          url: '/saveclientoptions',
          type: 'POST',
          data: {
                client_id: $s.attr('id').slice(10),
                screenres: $s.find('#client_screen_res option:selected').val(),
                shorttime: shortbool
                },
          dataType: "html"
        });

        request.done(function(msg) {
          $s = $('table.options_open');
          $s.removeClass("options_open");
          $s.find(':button').hide();
          $s.find("tr.clientoptions").toggle();
        })

        request.fail(function(jqXHR, textStatus, errorThrown) {
          $('table.options_open').find('span.error')
            .html(jqXHR.responseText).show().fadeOut(10000);
        });
      });

      $('button#clientcancel').on('click', function () {
        $s = $('table.options_open');
        $s.removeClass("options_open");
        $s.find(':button').hide();
        $s.find("tr.clientoptions").toggle();
      });

      // ** handle client-user events **

      $('button#user_throw_out').on('click', function () {
        result = confirm("Brukeren vil bli logget av uten forvarsel.\nEr du sikker?");
      });

      $('button#useraddtime').on('click', function () {
        if ($('input#add_time').val() == ''){
          $('input#add_time').addClass('inputmissing');
          return;
        }
        var min1 = parseInt($('input#add_time').val());
        var min2 = parseInt($('td#petter_minutes_left').html());
        min = min1+min2;
        $('td#petter_minutes_left').html(min+' min igjen');
        $('input#add_time').val('');
      });

      // ** handle opening-hours events **

      $(':input.chk').change(function () {
        if($(this).attr("checked"))
        {
          var id = $(this).attr("name").slice(0, -6);
          $("#"+id+"opens").attr("disabled", "disabled");
          $("#"+id+"closes").attr("disabled", "disabled");
        } else {
          var id = $(this).attr("name").slice(0, -6);
          $("#"+id+"opens").removeAttr("disabled");
          $("#"+id+"closes").removeAttr("disabled");
        }
      });

      $(':input.hour').setMask('29:59').keypress(function() {
        var currentMask = $(this).data('mask').mask;
        var newMask = $(this).val().match(/^2.*/) ? "23:59" : "29:59";
        if (newMask != currentMask) {
          $(this).setMask(newMask);
        }
        });

      $('button#hoursclear').on('click', function () {
        $('#add_hours_form')[0].reset();
        $(':input.hour').val('');
        $(':input.hour').removeAttr("disabled");
        $(':input.chk').removeAttr('checked');
      });

      // ** handle time-limitation-options events

      $('input#minutes_unlimited').change(function () {
        if($(this).attr("checked"))
        {
          $('input#minutes_limit').attr("disabled", "disabled");
        } else {
          $('input#minutes_limit').removeAttr("disabled");
        }
      });


    });

  == render :slim, :'_footer'