== render :slim, :'_header'
div class="main"
  - if department.name == department.branch.name
    h2 #{department.branch.name}
  - else
    h2 #{department.branch.name}: #{department.name}

  h3 Gjestebrukere
  p Gjestebrukere vil være kun være gyldige for den dagen de lages. Brukerene er gyldig på alle avdelinger med mindre det er aldersbegrensninger som skulle tilsi noe annet.
  div class="divdot inputf"
    button[type='button' class='guest' id="adduser"]  = "Lag gjestebruker"
    span[class='info' id="user_saved_info" style="margin-left:20px"]
    form id="add_user_form"
      table class="userform"
        tr
          td brukernavn
          td: input[type="text" id="username" class="required"]
          td passord
          td: input[type="text" id="user_password" class="required"]
        tr
          td alder
          td: select[name="age" id="user_age"]
            |<option value="20">voksen</option>
            |<option value="10">barn</option>
          td minutter
          td: input[type="text" class="nr required" id="user_minutes"]
        tr
          td: button[type='button' id="usersave"]  = "Lagre bruker"
          td: button[type='button' id="usercancel"]  = "Avbryt"
          td
          td[id="user_form_response"]
            span[class='error']


  h2 Klienter
  p Du vil bare kunne endre innstillinger på de klientene som ikke er i bruk.
  p Noen endringer vil først tre i kraft etter omstart.

  table class="clients"
    thead
      tr
        th
        th klientnavn
        th bruker
        th[colspan="2"] minutter igjen
        th
        th info
    tbody
    - for client in department.clients
      - if client.occupied?
        - user = User.find(client.user.id)
        tr class="occupied" id="#{client.id}"
          td[style="width:34px"]: img src="/img/pc_green.png" class="pc"
          td
            a href="/" #{client.name}
          td #{user.username}
          td[style="width:34px" class="td-minutes"] #{user.minutes}
          td
            input[type="hidden" class="user_id" value="#{user.id}"]
            input[type="hidden" class="users minutes" value="#{user.minutes}"]
            input[type="text" class="nr required"]
            button[type='button' class="users add_time"] = "+"
          td: button[type='button' class="throw-out"]  = "Kast ut!"
          td[style="width:160px"]
            span class="info"
            span class="error"
      - else
        tr class="available" id="#{client.id}"
          td[style="width:34px"]: img src="/img/pc_black.png" class="pc"
          td
            a href="/" #{client.name}
          td -
          td
          td
          td
          td[style="width:160px"]
            span class="info"
            span class="error"


  h2 Lokale innstillinger
  p Følgende innstillinger vil gjelde for alle klientene i denne avdelingen.
  p Hvis du lagrer et skjema med blanke felt, så vil innstillingene for filialen (#{department.branch.name}) gjelde isteden.
  h3 Åpningstider
  - hours = department.hours
  div class="divdot inputf"
    form id="change_hours_form" autocomplete="off"
      input[id="department_id" hidden value="#{department.id}"]
      input[id="opening_hours_id" hidden value="#{hours.id}"]
      table class="genform"
        tr
          td[colspan="6"]
          - if hours.owner_hours_type == 'Department'
            span[class="inherited" style="display:none" ] Disse innstillingene er arvet fra filial #{department.branch.name}:
          - else
            span[class="inherited" ] Disse innstillingene er arvet fra filial #{department.branch.name}:
        tr
          td
          td fra
          td til
          td stengt?
          td
          td fra
          td til
          td stengt?
        tr
          td mandag
          - if hours.monday_closed
              td: input[type="text" id="monday_opens" class="hour required" disabled value="#{hours.monday_opens}"] -
              td: input[type="text"  id="monday_closes" class="hour required" disabled value="#{hours.monday_closes}"]
              td: input[type="checkbox" class="chk" id="monday_closed" checked]
          - else
              td: input[type="text" id="monday_opens" class="hour required" value="#{hours.monday_opens}"] -
              td: input[type="text"  id="monday_closes" class="hour required"  value="#{hours.monday_closes}"]
              td: input[type="checkbox" class="chk" id="monday_closed"]
          td fredag
          - if hours.friday_closed
              td: input[type="text" id="friday_opens" class="hour required" disabled value="#{hours.friday_opens}"] -
              td: input[type="text"  id="friday_closes" class="hour required" disabled value="#{hours.friday_closes}"]
              td: input[type="checkbox" class="chk" id="friday_closed" checked]
          - else
              td: input[type="text" id="friday_opens" class="hour required" value="#{hours.friday_opens}"] -
              td: input[type="text"  id="friday_closes" class="hour required"  value="#{hours.friday_closes}"]
              td: input[type="checkbox" class="chk" id="friday_closed"]
        tr
          td tirsdag
          - if hours.tuesday_closed
              td: input[type="text" id="tuesday_opens" class="hour required" disabled value="#{hours.tuesday_opens}"] -
              td: input[type="text"  id="tuesday_closes" class="hour required" disabled value="#{hours.tuesday_closes}"]
              td: input[type="checkbox" class="chk" id="tuesday_closed" checked]
          - else
              td: input[type="text" id="tuesday_opens" class="hour required" value="#{hours.tuesday_opens}"] -
              td: input[type="text"  id="tuesday_closes" class="hour required"  value="#{hours.tuesday_closes}"]
              td: input[type="checkbox" class="chk" id="tuesday_closed"]
          td lørdag
          - if hours.saturday_closed
              td: input[type="text" id="saturday_opens" class="hour required" disabled value="#{hours.saturday_opens}"] -
              td: input[type="text"  id="saturday_closes" class="hour required" disabled value="#{hours.saturday_closes}"]
              td: input[type="checkbox" class="chk" id="saturday_closed" checked]
          - else
              td: input[type="text" id="saturday_opens" class="hour required" value="#{hours.saturday_opens}"] -
              td: input[type="text"  id="saturday_closes" class="hour required"  value="#{hours.saturday_closes}"]
              td: input[type="checkbox" class="chk" id="saturday_closed"]
        tr
          td onsdag
          - if hours.wednsday_closed
              td: input[type="text" id="wednsday_opens" class="hour required" disabled value="#{hours.wednsday_opens}"] -
              td: input[type="text"  id="wednsday_closes" class="hour required" disabled value="#{hours.wednsday_closes}"]
              td: input[type="checkbox" class="chk" id="wednsday_closed" checked]
          - else
              td: input[type="text" id="wednsday_opens" class="hour required" value="#{hours.wednsday_opens}"] -
              td: input[type="text"  id="wednsday_closes" class="hour required"  value="#{hours.wednsday_closes}"]
              td: input[type="checkbox" class="chk" id="wednsday_closed"]
          td søndag
          - if hours.sunday_closed
              td: input[type="text" id="sunday_opens" class="hour required" disabled value="#{hours.sunday_opens}"] -
              td: input[type="text"  id="sunday_closes" class="hour required" disabled value="#{hours.sunday_closes}"]
              td: input[type="checkbox" class="chk" id="sunday_closed" checked]
          - else
              td: input[type="text" id="sunday_opens" class="hour required" value="#{hours.sunday_opens}"] -
              td: input[type="text"  id="sunday_closes" class="hour required" value="#{hours.sunday_closes}"]
              td: input[type="checkbox" class="chk" id="sunday_closed"]
        tr
          td torsdag
          - if hours.thursday_closed
              td: input[type="text" id="thursday_opens" class="hour required" disabled value="#{hours.thursday_opens}"] -
              td: input[type="text"  id="thursday_closes" class="hour required" disabled value="#{hours.thursday_closes}"]
              td: input[type="checkbox" class="chk" id="thursday_closed" checked]
          - else
              td: input[type="text" id="thursday_opens" class="hour required" value="#{hours.thursday_opens}"] -
              td: input[type="text"  id="thursday_closes" class="hour required"  value="#{hours.thursday_closes}"]
              td: input[type="checkbox" class="chk" id="thursday_closed"]
          td
          td
        tr
          td[colspan="6"]&nbsp;
        tr
          td[colspan="2"] Brukerne logges av
          td: input[type="text" class="nr" id="minutes_before_closing" value="#{hours.minutes_before_closing}"]
          td[colspan="3"] minutter før stengetid
      div[class="hoursbuttons"]=
    button[type='button' id="hourssave" class="gen"]  = "Lagre"
    button[type='button' id="hoursclear" class="gen"]  = "Blank ut skjema"
    span[id="hours_info" class="info" style="margin-left:48px"]
    span[id="hours_error" class="error" style="margin-left:48px"]
    - hours_b = Branch.find(department.branch_id).hours
    div class="backup" id="parent-hours"
      input[id="opening_hours_id_b" hidden value="#{hours_b.id}"]
      input[id="monday_opens_b" hidden value="#{hours_b.monday_opens}"]
      input[id="monday_closes_b" hidden value="#{hours_b.monday_closes}"]
      input[id="monday_closed_b" hidden value="#{hours_b.monday_closed}"]
      input[id="tuesday_opens_b" hidden value="#{hours_b.tuesday_opens}"]
      input[id="tuesday_closes_b" hidden value="#{hours_b.tuesday_closes}"]
      input[id="tuesday_closed_b" hidden value="#{hours_b.tuesday_closed}"]
      input[id="wednsday_opens_b" hidden value="#{hours_b.wednsday_opens}"]
      input[id="wednsday_closes_b" hidden value="#{hours_b.wednsday_closes}"]
      input[id="wednsday_closed_b" hidden value="#{hours_b.wednsday_closed}"]
      input[id="thursday_opens_b" hidden value="#{hours_b.thursday_opens}"]
      input[id="thursday_closes_b" hidden value="#{hours_b.thursday_closes}"]
      input[id="thursday_closed_b" hidden value="#{hours_b.thursday_closed}"]
      input[id="friday_opens_b" hidden value="#{hours_b.friday_opens}"]
      input[id="friday_closes_b" hidden value="#{hours_b.friday_closes}"]
      input[id="friday_closed_b" hidden value="#{hours_b.friday_closed}"]
      input[id="saturday_opens_b" hidden value="#{hours_b.saturday_opens}"]
      input[id="saturday_closes_b" hidden value="#{hours_b.saturday_closes}"]
      input[id="saturday_closed_b" hidden value="#{hours_b.saturday_closed}"]
      input[id="sunday_opens_b" hidden value="#{hours_b.sunday_opens}"]
      input[id="sunday_closes_b" hidden value="#{hours_b.sunday_closes}"]
      input[id="sunday_closed_b" hidden value="#{hours_b.sunday_closed}"]

  h3 Aldersbegrensninger
  p Hvis det er ønskelig, kan klientene være forbeholdt brukere innenfor en gitt aldersgruppe. Angi nedre og øvre aldersgrense i år:
  div class="divdot inputf"
    table class="genform"
      tr
        td nedre aldergrense
        td: input[type="text" name="age_lower" id="age_lower" class="nr"]
        td øvre aldergrense
        td: input[type="text" name="age_higher" id="age_higher" class="nr"]
        td: button[type='button' id="agesave" ]  = "Lagre"


  h3 Tidsbegrensninger
  p Angi tidsbegrensinger per bruker per dag, eller tillat fri bruk:
  div class="divdot inputf"
    table class="genform"
      tr
        td minutter per dag
        td: input[type="text" name="minutes_limit" id="minutes_limit" class="nr"]
        td fri bruk?
        td: input[type="checkbox" name="minutes_unlimited" id="minutes_unlimited"]
        td: button[type='button' id="use_save"]  = "Lagre"

  h3 Printer
  div class="divdot inputf"
    table class="genform"
      tr
        td  printeradresse
        td: input[type="text" name="printer" class="printer"]
        td: button[type='button' id="printersave" disabled]  = "Lagre"

  script src="/js/jquery.meio.mask.min.js"
  javascript:
    // TODO change all # duplicates to .class
    // TODO split this into common.js, department.js and branch.js when done

    // ** conveniece functions **

    $.fn.exists = function () {
      return this.length != 0;
    }

    $(document).ready(function () {

      // ** set input masks **

      $('input#user_minutes').setMask('999');
      $('input#age_lower').setMask('99');
      $('input#age_higher').setMask('99');
      $('input#minutes_limit').setMask('999');
      $('table.clients').find('input.nr.required').setMask('999');
      $('input#minutes_before_closing').setMask('99');

      // ** global functions and handles **

      $(':input').focus(function () {
        if ($(this).hasClass('inputmissing')) {
          $(this).removeClass('inputmissing');
        }
      });

      // ** handle add-guest-user events **

      $("button#adduser").on("click", function() {
        $('table.userform').toggle();
      });
      $("button#usercancel").on("click", function() {
        $('table.userform').hide();
      });

      $('button#usersave').on('click', function () {
        var missing = 0;
        $('#add_user_form').find('input.required').each(function() {
          if ($(this).val() == '' ) {
            $(this).addClass('inputmissing');
            missing = 1;
          }
        });

        if (missing) { return; }

        var request = $.ajax({
          url: '/api/users',
          type: 'POST',
          data: {
                 username: $('input#username').val(),
                 password: $('input#user_password').val(),
                 age: $('select#user_age').val(),
                 minutes: $('input#user_minutes').val(),
                 },
          dataType: "json"
          });

        request.done(function(data) {
          $('#user_saved_info').html('OK! Bruker "' + data.user.username + '" oprettet.')
            .show().fadeOut(5000);
          $('#add_user_form')[0].reset();
          $('table.userform').hide();
        });

        request.fail(function(jqXHR, textStatus, errorThrown) {
          $('td#user_form_response').find('span.error')
            .html("Brukeren finnes allerede! Velg et annet brukernavn.").show().fadeOut(5000);
        })
      });

      // ** handle client-options events **

      $("button#optionsbutton").on("click", function() {
        $s = $(this).parents("tr").siblings("tr.clientoptions")
        $s.toggle();
        if (($s).is(':visible')) {
          $s.parents('table').addClass("options_open");
        } else {
          $s.parents('table').removeClass("options_open");
        }
      });

      $("table.clients.available").hover(
        function() {
          if (!$("table.clients.options_open").exists()) {
            $(this).find(":button").show()
          }
        },
        function() {
          if (!$("table.clients.options_open").exists()) {
            $(this).find(":button").hide()
            $('tr.clientoptions').hide();
            $('table.options_open').removeClass('options_open');
          }
        });

      $("table.clients.occupied").hover(
        function() {
          $(this).find(":button").show();
          $(this).find(":input").show();
        },
        function() {
          $(this).find(":button").hide();
          $(this).find(":input").removeClass('inputmissing').hide();
        });

      $('button#clientsave').on('click', function () {
        var $s = $(this).parents('table');
        var shortbool = false;
        if ($s.find('input.shorttimemachine').is(':checked')) {
          shortbool = true;
        }

        var request = $.ajax({
          url: '/api/clients/'+$s.attr('id').slice(10),
          type: 'PUT',
          data: {
                screen_resolution_id: $s.find('#client_screen_res option:selected').val(),
                shorttime: shortbool
                },
          dataType: "json"
        });

        request.done(function(msg) {
          $s = $('table.options_open');
          $s.find('span.info').html('OK! Lagret.').show().fadeOut(5000);
          $s.removeClass("options_open");
          $s.find(':button').hide();
          $s.find("tr.clientoptions").toggle();
        })

        request.fail(function(jqXHR, textStatus, errorThrown) {
          $('table.options_open').find('span.error')
            .html(jqXHR.responseText).show().fadeOut(5000);
        });
      });

      $('button#clientcancel').on('click', function () {
        $s = $('table.options_open');
        $s.removeClass("options_open");
        $s.find(':button').hide();
        $s.find("tr.clientoptions").toggle();
      });

      // ** handle client-user events **

      $('button.throw-out').on('click', function () {
        result = confirm("Brukeren vil bli logget av uten forvarsel.\nEr du sikker?");
        if (result) {
          $(this).parents('tr').find('span.info').html("Ikke ennå!").show().fadeOut(5000);
          }
      });

      // ** Handle adjust user minutes
      $('button.users.add_time').on('click', function () {

        var $i = $(this).siblings('input.nr.required')
        if (parseInt($i.val()) == 0) {
          $i.val('');
          return;
        }
        if ($i.val() =='' ) {
          $i.addClass('inputmissing');
          return;
        }

        var $tr = $(this).parents('tr');
        var user_id = $tr.find('input.user_id').val();
        var $min = $tr.find('input.users.minutes');
        var user_minutes = $min.val();

        var request = $.ajax({
          url: '/api/users/'+user_id,
          type: "PUT",
          data: {
                minutes: parseInt(user_minutes)+parseInt($i.val())
                },
          dataType: "json"
        });

        request.done(function(data) {
          $min.val(data.user.minutes); // update hidden input
          $tr.find('td.td-minutes').html(data.user.minutes);
          $i.val('');
        });

        request.fail(function(jqXHR, textStatus, errorThrown) {
            $tr.find('span.error').html(jqXHR.responseText).show().fadeOut(5000);
         });

      });

      // ** handle opening-hours events **

      $(':input.chk').change(function () {
        if($(this).attr("checked"))
        {
          var id = $(this).attr("id").slice(0, -6);
          $("#"+id+"opens").attr("disabled", "disabled").removeClass("inputmissing");
          $("#"+id+"closes").attr("disabled", "disabled").removeClass("inputmissing");
        } else {
          var id = $(this).attr("id").slice(0, -6);
          $("#"+id+"opens").removeAttr("disabled");
          $("#"+id+"closes").removeAttr("disabled");
        }
      });

      $(':input.hour').setMask('29:59').keypress(function() {
        var currentMask = $(this).data('mask').mask;
        var newMask = $(this).val().match(/^2.*/) ? "23:59" : "29:59";
        if (newMask != currentMask) {
          $(this).setMask(newMask);
        }
        });

      $('button#hoursclear').on('click', function () {
        $('#change_hours_form')[0].reset();
        $(':input.hour').val('').removeClass("inputmissing");
        $(':input.hour').removeAttr("disabled");
        $(':input.chk').removeAttr('checked');
      });

      $('button#hourssave').on('click', function() {

        var missing = 0;
        $('input.hour.required:not(:disabled)').each(function () {
          if ($(this).val() == '' ) {
            $(this).addClass('inputmissing');
            missing += 1;
          }
        });

        // return if one or more (but not all 14) input fields are missing
        if (missing && (missing != 14 )) { return; }

        $(':input.hour').removeClass("inputmissing");

        var request = $.ajax({
          url: '/saveopeninghours',
          type: 'POST',
          cache: false,
          data: {
                missing_fields: missing,
                department_id: $('input#department_id').val(),
                opening_hours_id: $('input#opening_hours_id').val(),
                monday_opens: $('input#monday_opens').val(),
                monday_closes: $('input#monday_closes').val(),
                tuesday_opens: $('input#tuesday_opens').val(),
                tuesday_closes: $('input#tuesday_closes').val(),
                wednsday_opens: $('input#wednsday_opens').val(),
                wednsday_closes: $('input#wednsday_closes').val(),
                thursday_opens: $('input#thursday_opens').val(),
                thursday_closes: $('input#thursday_closes').val(),
                friday_opens: $('input#friday_opens').val(),
                friday_closes: $('input#friday_closes').val(),
                saturday_opens: $('input#saturday_opens').val(),
                saturday_closes: $('input#saturday_closes').val(),
                sunday_opens: $('input#sunday_opens').val(),
                sunday_closes: $('input#sunday_closes').val(),
                monday_closed: $('input#monday_closed').is(':checked'),
                tuesday_closed: $('input#tuesday_closed').is(':checked'),
                wednsday_closed: $('input#wednsday_closed').is(':checked'),
                thursday_closed: $('input#thursday_closed').is(':checked'),
                friday_closed: $('input#friday_closed').is(':checked'),
                saturday_closed: $('input#saturday_closed').is(':checked'),
                sunday_closed: $('input#sunday_closed').is(':checked'),
                minutes_before_closing: $('input#minutes_before_closing').val()
                },
          dataType: "html"
        });

        request.done(function(msg, sthn, jqXHR) {
          $('span#hours_error').hide();
          $('span#hours_info').html(msg).show().fadeOut(5000);
          if (msg.match(/OK/)) {
            $('#change_hours_form').find('span.inherited').hide();
            $('input#opening_hours_id').val(jqXHR.getResponseHeader('new_hours_id'));
          }
          if (msg.match(/Arver/)) {
            $('#change_hours_form').find('span.inherited').show();
            $('div#parent-hours').find(':input').each(function() {
              var v = $(this).val();
              var id = $(this).attr("id").slice(0,-2);
              if (v == 'true') {
                $('#'+id).attr('checked', true);
                $('#'+id.slice(0,-6)+'opens').attr("disabled", "disabled");
                $('#'+id.slice(0,-6)+'closes').attr("disabled", "disabled");
              } else {
                $('#'+id).val(v);
              }

            });
          }
        });

        request.fail(function(jqXHR, textStatus, errorThrown) {
          $('span#hours_info').hide();
          $('span#hours_error').html(jqXHR.responseText).show().fadeOut(5000);
        });
      });

      // ** handle time-limitation-options events

      $('input#minutes_unlimited').change(function () {
        if($(this).attr("checked"))
        {
          $('input#minutes_limit').attr("disabled", "disabled");
        } else {
          $('input#minutes_limit').removeAttr("disabled");
        }
      });


    });

  == render :slim, :'_footer'